{"version":3,"sources":["project.js"],"names":["Trello","appName","UniqueBoardList","boards","Board","boardName","UniqueLists","lists","List","listName","tasks","Task","taskName","sampleBoard","renderBoardLists","listInputSectionGenerator","newInputListDiv","document","createElement","id","classList","add","textContent","getElementById","appendChild","newInputElement","taskInputGenerator","listId","newInputTaskDiv","tasksListGenerator","listIndex","split","length","task","newTaskLi","listSectionGenerator","list_index","newListDiv","newUl","innerHTML","addEventListener","event","keyCode","console","log","target","value","trim","test","includes","newList","push","toLowerCase","alert","newTask"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEMA,SACF,gBAAYC,OAAZ,EAAqB;AAAA;;AACjB,OAAKA,OAAL,GAAeA,OAAf;AACA,OAAKC,eAAL,GAAuB,EAAvB;AACA,OAAKC,MAAL,GAAc,EAAd;AACH;;IAICC,QACF,eAAYC,SAAZ,EAAuB;AAAA;;AACnB,OAAKA,SAAL,GAAiBA,SAAjB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACA,OAAKC,KAAL,GAAa,EAAb;AACH;;IAGCC,OACF,cAAYC,QAAZ,EAAsB;AAAA;;AAClB,OAAKA,QAAL,GAAgBA,QAAhB;AACA,OAAKC,KAAL,GAAa,EAAb;AACH;;IAGCC,OACF,cAAYC,QAAZ,EAAsB;AAAA;;AAClB,OAAKA,QAAL,GAAgBA,QAAhB;AACH,GAGL;;;AACA,IAAIC,WAAW,GAAG,IAAIT,KAAJ,CAAU,aAAV,CAAlB;AACAU,gBAAgB;;AAGhB,SAASC,yBAAT,GAAqC;AACjC,MAAIC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAF,EAAAA,eAAe,CAACG,EAAhB,GAAqB,gBAArB;AACAH,EAAAA,eAAe,CAACI,SAAhB,CAA0BC,GAA1B,CAA8B,WAA9B;AACAL,EAAAA,eAAe,CAACM,WAAhB,GAA8B,cAA9B;AACAN,EAAAA,eAAe,CAACI,SAAhB,CAA0BC,GAA1B,CAA8B,cAA9B;AACAJ,EAAAA,QAAQ,CAACM,cAAT,CAAwB,YAAxB,EAAsCC,WAAtC,CAAkDR,eAAlD;AACA,MAAIS,eAAe,GAAGR,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtB;AACAO,EAAAA,eAAe,CAACN,EAAhB,GAAqB,YAArB;AACAF,EAAAA,QAAQ,CAACM,cAAT,CAAwB,gBAAxB,EAA0CC,WAA1C,CAAsDC,eAAtD;AACH;;AAED,SAASC,kBAAT,CAA4BC,MAA5B,EAAoC;AAChC,MAAIC,eAAe,GAAGX,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAtB;AACAU,EAAAA,eAAe,CAACT,EAAhB,4BAAuCQ,MAAvC;AACAC,EAAAA,eAAe,CAACR,SAAhB,CAA0BC,GAA1B,CAA8B,WAA9B;AACAO,EAAAA,eAAe,CAACN,WAAhB,GAA8B,cAA9B;AACAL,EAAAA,QAAQ,CAACM,cAAT,CAAwBI,MAAxB,EAAgCH,WAAhC,CAA4CI,eAA5C;AACA,MAAIH,eAAe,GAAGR,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAtB;AACAO,EAAAA,eAAe,CAACN,EAAhB,wBAAmCQ,MAAnC;AACAF,EAAAA,eAAe,CAACL,SAAhB,CAA0BC,GAA1B,CAA8B,gBAA9B,EARgC,CAShC;;AACAJ,EAAAA,QAAQ,CAACM,cAAT,0BAA0CI,MAA1C,GAAoDH,WAApD,CAAgEC,eAAhE;AACH;;AAED,SAASI,kBAAT,CAA4BF,MAA5B,EAAoC;AAChC;AACAG,EAAAA,SAAS,GAAGH,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBJ,MAAM,CAACI,KAAP,CAAa,GAAb,EAAkBC,MAAlB,GAAyB,CAA3C,CAAZ;AAFgC;AAAA;AAAA;;AAAA;AAGhC,yBAAiBnB,WAAW,CAACN,KAAZ,CAAkBuB,SAAlB,EAA6BpB,KAA9C,8HAAqD;AAAA,UAA5CuB,IAA4C;AACjD,UAAIC,SAAS,GAAGjB,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAhB;AACAgB,MAAAA,SAAS,CAACZ,WAAV,GAAwBW,IAAI,CAACrB,QAA7B;AACAsB,MAAAA,SAAS,CAACd,SAAV,CAAoBC,GAApB,CAAwB,SAAxB;AACAJ,MAAAA,QAAQ,CAACM,cAAT,CAAwBI,MAAxB,EAAgCH,WAAhC,CAA4CU,SAA5C;AACH;AAR+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAShCR,EAAAA,kBAAkB,CAACC,MAAD,CAAlB;AACH;;AAED,SAASQ,oBAAT,GAAgC;AAC5B,OAAI,IAAIC,WAAR,IAAsBvB,WAAW,CAACN,KAAlC,EAAyC;AACrC,QAAI8B,UAAU,GAAGpB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAjB;AACAmB,IAAAA,UAAU,CAAClB,EAAX,aAAmBN,WAAW,CAACR,SAA/B,cAA4C+B,WAA5C;AACAC,IAAAA,UAAU,CAACjB,SAAX,CAAqBC,GAArB,CAAyB,cAAzB;AACAgB,IAAAA,UAAU,CAACf,WAAX,GAAyBT,WAAW,CAACN,KAAZ,CAAkB6B,WAAlB,EAA8B3B,QAAvD;AACAQ,IAAAA,QAAQ,CAACM,cAAT,CAAwB,YAAxB,EAAsCC,WAAtC,CAAkDa,UAAlD;AACA,QAAIC,KAAK,GAAGrB,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAZ;AACAoB,IAAAA,KAAK,CAACnB,EAAN,aAAcN,WAAW,CAACR,SAA1B,iBAA0C+B,WAA1C;AACAnB,IAAAA,QAAQ,CAACM,cAAT,WAA2BV,WAAW,CAACR,SAAvC,cAAoD+B,WAApD,GAAkEZ,WAAlE,CAA8Ec,KAA9E;AACAT,IAAAA,kBAAkB,WAAIhB,WAAW,CAACR,SAAhB,iBAAgC+B,WAAhC,EAAlB;AACH;;AACDrB,EAAAA,yBAAyB;AAC5B;;AAED,SAASD,gBAAT,GAA4B;AACxB;AACAG,EAAAA,QAAQ,CAACM,cAAT,CAAwB,YAAxB,EAAsCgB,SAAtC,GAAkD,EAAlD;AACAJ,EAAAA,oBAAoB;AACvB;;AAEDlB,QAAQ,CAACM,cAAT,CAAwB,YAAxB,EAAsCiB,gBAAtC,CAAuD,OAAvD,EAAgE,UAACC,KAAD,EAAU;AACtE,MAAIA,KAAK,CAACC,OAAN,IAAiB,EAArB,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAa1B,EAAzB;;AACA,QAAIsB,KAAK,CAACI,MAAN,CAAa1B,EAAb,IAAmB,YAAvB,EAAqC;AACjC,UAAIV,QAAQ,GAAGQ,QAAQ,CAACM,cAAT,CAAwB,YAAxB,EAAsCuB,KAAtC,CAA4CC,IAA5C,EAAf;;AACA,UAAI,CAAE,OAAOC,IAAP,CAAYvC,QAAZ,CAAN,EAA8B;AAC1B,YAAI,CAACI,WAAW,CAACP,WAAZ,CAAwB2C,QAAxB,CAAiCxC,QAAjC,CAAL,EAAiD;AAC7C,cAAIyC,OAAO,GAAG,IAAI1C,IAAJ,CAASC,QAAT,CAAd;AACAI,UAAAA,WAAW,CAACN,KAAZ,CAAkB4C,IAAlB,CAAuBD,OAAvB;AACArC,UAAAA,WAAW,CAACP,WAAZ,CAAwB6C,IAAxB,CAA6B1C,QAAQ,CAAC2C,WAAT,EAA7B;AACH,SAJD,MAIO;AACHC,UAAAA,KAAK,CAAC,wDAAD,CAAL;AACH;;AACDvC,QAAAA,gBAAgB;AACnB;AACJ,KAZD,MAYO;AACH,UAAIF,QAAQ,GAAGK,QAAQ,CAACM,cAAT,CAAwBkB,KAAK,CAACI,MAAN,CAAa1B,EAArC,EAAyC2B,KAAzC,CAA+CC,IAA/C,EAAf;AACAX,MAAAA,UAAU,GAAGK,KAAK,CAACI,MAAN,CAAa1B,EAAb,CAAgBY,KAAhB,CAAsB,GAAtB,EAA2BU,KAAK,CAACI,MAAN,CAAa1B,EAAb,CAAgBY,KAAhB,CAAsB,GAAtB,EAA2BC,MAA3B,GAAkC,CAA7D,CAAb;AACA,UAAIsB,OAAO,GAAG,IAAI3C,IAAJ,CAASC,QAAT,CAAd;AACAC,MAAAA,WAAW,CAACN,KAAZ,CAAkB6B,UAAlB,EAA8B1B,KAA9B,CAAoCyC,IAApC,CAAyCG,OAAzC;AACAxC,MAAAA,gBAAgB;AACnB;AACJ;AAGJ,CAzBD","file":"project.b5dfbff8.map","sourceRoot":"..","sourcesContent":["// Create a board object.\n// create a list object.\n// create an item object.\n// Constructor function for board object.\n\n// create a board object. with all boards as entry,\n// sample trello object.\n// let trello = {\n//     boards: {\n//         board1: {\n//             boardName: board1, \n//             lists: {\n//                 list1: {\n//                     listname: list1,\n//                     items: {\n//                          item1: {\n//                                itemName: item1,\n//                          },...\n//                      }    \n//                 }\n//             }\n//         }\n//     } \n// }\n// single board setup.\n// let board = {\n//     lists = [{\n//         listName:list1,\n//         tasks: [{taskName: task1}],\n//     }],\n// }\n\nclass Trello {\n    constructor(appName) {\n        this.appName = appName;\n        this.UniqueBoardList = [];\n        this.boards = [];\n    }\n}\n\n\nclass Board {\n    constructor(boardName) {\n        this.boardName = boardName;\n        this.UniqueLists = [];\n        this.lists = [];\n    }\n}\n\nclass List {\n    constructor(listName) {\n        this.listName = listName;\n        this.tasks = [];\n    }\n}\n\nclass Task {\n    constructor(taskName) {\n        this.taskName = taskName;\n    }\n}\n\n// create board object and render board;\nlet sampleBoard = new Board('SampleBoard');\nrenderBoardLists();\n\n\nfunction listInputSectionGenerator() {\n    let newInputListDiv = document.createElement('div');\n    newInputListDiv.id = 'div-input-list';\n    newInputListDiv.classList.add('div-input');\n    newInputListDiv.textContent = 'Add New List';\n    newInputListDiv.classList.add('list-section');\n    document.getElementById('task-board').appendChild(newInputListDiv);\n    let newInputElement = document.createElement('input');\n    newInputElement.id = 'input-list';\n    document.getElementById('div-input-list').appendChild(newInputElement);\n}\n\nfunction taskInputGenerator(listId) {\n    let newInputTaskDiv = document.createElement('div');\n    newInputTaskDiv.id = `div-input-task-${listId}`;\n    newInputTaskDiv.classList.add('div-input');\n    newInputTaskDiv.textContent = 'Add New Task';\n    document.getElementById(listId).appendChild(newInputTaskDiv);\n    let newInputElement = document.createElement('input');\n    newInputElement.id = `input-task-${listId}`;\n    newInputElement.classList.add('div-task-input');\n    // newInputElement.dataset.listId = listId.\n    document.getElementById(`div-input-task-${listId}`).appendChild(newInputElement);\n}\n\nfunction tasksListGenerator(listId) {\n    // render all tasks\n    listIndex = listId.split('-')[listId.split('-').length-1];\n    for (let task of sampleBoard.lists[listIndex].tasks) {\n        let newTaskLi = document.createElement('li');\n        newTaskLi.textContent = task.taskName;\n        newTaskLi.classList.add('task-li');\n        document.getElementById(listId).appendChild(newTaskLi);\n    }\n    taskInputGenerator(listId);\n}\n\nfunction listSectionGenerator() {\n    for(let list_index in sampleBoard.lists) {\n        let newListDiv = document.createElement('div');\n        newListDiv.id = `${sampleBoard.boardName}-${list_index}`;\n        newListDiv.classList.add('list-section');\n        newListDiv.textContent = sampleBoard.lists[list_index].listName;\n        document.getElementById('task-board').appendChild(newListDiv);\n        let newUl = document.createElement('ul');\n        newUl.id = `${sampleBoard.boardName}-ul-${list_index}`;\n        document.getElementById(`${sampleBoard.boardName}-${list_index}`).appendChild(newUl);\n        tasksListGenerator(`${sampleBoard.boardName}-ul-${list_index}`);\n    }\n    listInputSectionGenerator();\n}\n\nfunction renderBoardLists() {\n    // iterate through the list array of boards and tasks array of lists.\n    document.getElementById('task-board').innerHTML = '';\n    listSectionGenerator();\n}\n\ndocument.getElementById('task-board').addEventListener('keyup', (event)=> {\n    if (event.keyCode == 13) {\n        console.log(event.target.id);\n        if (event.target.id == 'input-list') {\n            let listName = document.getElementById('input-list').value.trim();\n            if (!(/^ *$/.test(listName))) {\n                if (!sampleBoard.UniqueLists.includes(listName)) {\n                    let newList = new List(listName);\n                    sampleBoard.lists.push(newList);\n                    sampleBoard.UniqueLists.push(listName.toLowerCase());\n                } else {\n                    alert('This board contains a list with the same name already.');\n                }\n                renderBoardLists();\n            }\n        } else {\n            let taskName = document.getElementById(event.target.id).value.trim();\n            list_index = event.target.id.split('-')[event.target.id.split('-').length-1];\n            let newTask = new Task(taskName);\n            sampleBoard.lists[list_index].tasks.push(newTask);\n            renderBoardLists();\n        }\n    }\n\n    \n})"]}