{"version":3,"sources":["project.js"],"names":["Trello","appName","UniqueBoards","boards","Board","boardName","UniqueLists","lists","List","listName","tasks","Task","taskName","newApp","sampleBoard","listInputSectionGenerator","newInputListDiv","document","createElement","id","classList","add","textContent","getElementById","appendChild","newInputElement","taskInputGenerator","listId","newInputTaskDiv","innerHTML","tasksListGenerator","boardIndex","value","listIndex","split","length","task","newTaskLi","listSectionGenerator","list_index","newListDiv","newUl","renderBoardLists","renderBoardsInSelect","parentSelect","newOption","selected","addEventListener","event","keyCode","console","log","target","trim","test","includes","toLowerCase","newList","push","alert","newTask","newBoard","init"],"mappings":"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","file":"project.b5dfbff8.map","sourceRoot":"..","sourcesContent":["class Trello {\n    constructor(appName) {\n        this.appName = appName;\n        this.UniqueBoards = [];\n        this.boards = [];\n    }\n}\n\n\nclass Board {\n    constructor(boardName) {\n        this.boardName = boardName;\n        this.UniqueLists = [];\n        this.lists = [];\n    }\n}\n\nclass List {\n    constructor(listName) {\n        this.listName = listName;\n        this.tasks = [];\n    }\n}\n\nclass Task {\n    constructor(taskName) {\n        this.taskName = taskName;\n    }\n}\n\nlet newApp = null;\n\n// create board object and render board;\nlet sampleBoard = new Board('SampleBoard');\n\nfunction listInputSectionGenerator() {\n    let newInputListDiv = document.createElement('div');\n    newInputListDiv.id = 'div-input-list';\n    newInputListDiv.classList.add('div-input');\n    newInputListDiv.textContent = 'Add New List';\n    newInputListDiv.classList.add('list-section');\n    newInputListDiv.classList.add('three');\n    newInputListDiv.classList.add('columns');\n    document.getElementById('task-board').appendChild(newInputListDiv);\n    let newInputElement = document.createElement('input');\n    newInputElement.id = 'input-list';\n    document.getElementById('div-input-list').appendChild(newInputElement);\n}\n\nfunction taskInputGenerator(listId) {\n    let newInputTaskDiv = document.createElement('div');\n    newInputTaskDiv.id = `div-input-task-${listId}`;\n    newInputTaskDiv.classList.add('div-input');\n    newInputTaskDiv.innerHTML = '<p>Add New Task</p>';\n    document.getElementById(listId).appendChild(newInputTaskDiv);\n    let newInputElement = document.createElement('input');\n    newInputElement.id = `input-task-${listId}`;\n    newInputElement.classList.add('div-task-input');\n    // newInputElement.dataset.listId = listId.\n    document.getElementById(`div-input-task-${listId}`).appendChild(newInputElement);\n}\n\nfunction tasksListGenerator(listId) {\n    // render all tasks\n    let boardIndex = document.getElementById('board-selector').value;\n    listIndex = listId.split('-')[listId.split('-').length-1];\n    for (let task of newApp.boards[boardIndex].lists[listIndex].tasks) {\n        let newTaskLi = document.createElement('li');\n        newTaskLi.textContent = task.taskName;\n        newTaskLi.classList.add('task-li');\n        document.getElementById(listId).appendChild(newTaskLi);\n    }\n    taskInputGenerator(listId);\n}\n\nfunction listSectionGenerator(boardIndex) {\n    for(let list_index in newApp.boards[boardIndex].lists) {\n        let newListDiv = document.createElement('div');\n        newListDiv.id = `${newApp.boards[boardIndex].boardName}-${list_index}`;\n        newListDiv.classList.add('list-section');\n        newListDiv.classList.add('three');\n        newListDiv.classList.add('columns');        \n        newListDiv.textContent = newApp.boards[boardIndex].lists[list_index].listName;\n        document.getElementById('task-board').appendChild(newListDiv);\n        let newUl = document.createElement('ul');\n        newUl.id = `${newApp.boards[boardIndex].boardName}-ul-${list_index}`;\n        document.getElementById(`${newApp.boards[boardIndex].boardName}-${list_index}`).appendChild(newUl);\n        tasksListGenerator(`${newApp.boards[boardIndex].boardName}-ul-${list_index}`);\n    }\n    listInputSectionGenerator();\n}\n\nfunction renderBoardLists(boardIndex) {\n    // iterate through the list array of boards and tasks array of lists.\n    document.getElementById('task-board').innerHTML = '';\n    if (boardIndex) {\n        listSectionGenerator(boardIndex);\n    }\n}\n\nfunction renderBoardsInSelect() {\n    // iterate through the boards name and display in the select option.\n    document.getElementById('board-selector').innerHTML = '';\n    let parentSelect = document.getElementById('board-selector');\n    let newOption = document.createElement('option');\n    newOption.value = 99;\n    newOption.textContent = 'Select a board';\n    newOption.selected = 'yes';\n    parentSelect.appendChild(newOption);\n    for(let boardIndex in newApp.boards) {\n        newOption = document.createElement('option');\n        newOption.value = boardIndex;\n        newOption.textContent = newApp.boards[boardIndex].boardName;\n        parentSelect.appendChild(newOption);\n    }\n}\n\ndocument.getElementById('task-board').addEventListener('keyup', (event)=> {\n    if (event.keyCode == 13) {\n        let boardIndex = document.getElementById('board-selector').value;\n        console.log(event.target.id);\n        if (event.target.id == 'input-list') {\n            let listName = document.getElementById('input-list').value.trim();\n            if (!(/^ *$/.test(listName))) {\n                if (!newApp.boards[boardIndex].UniqueLists.includes(listName.toLowerCase())) {\n                    let newList = new List(listName);\n                    newApp.boards[boardIndex].lists.push(newList);\n                    newApp.boards[boardIndex].UniqueLists.push(listName.toLowerCase());\n                } else {\n                    alert('This board contains a list with the same name already.');\n                }\n                renderBoardLists(boardIndex);\n            }\n        } else {\n            let taskName = document.getElementById(event.target.id).value.trim();\n            list_index = event.target.id.split('-')[event.target.id.split('-').length-1];\n            let newTask = new Task(taskName);\n            newApp.boards[boardIndex].lists[list_index].tasks.push(newTask);\n            console.log()\n            renderBoardLists(boardIndex);\n        }\n    }  \n})\n\ndocument.getElementById('input-board').addEventListener('keyup', () => {\n    if (event.keyCode == 13) {\n        let boardName = document.getElementById('input-board').value.trim();\n        document.getElementById('input-board').value = '';\n        if (!(/^ *$/.test(boardName))) {\n            if (!newApp.UniqueBoards.includes(boardName.toLowerCase())) {\n                let newBoard = new Board(boardName);\n                newApp.boards.push(newBoard);\n                newApp.UniqueBoards.push(boardName.toLowerCase());\n            } else {\n                alert('A board with the given name already exists.');\n            }\n            renderBoardsInSelect();\n            // renderBoardLists();\n        }\n    }\n});\n\ndocument.getElementById('board-selector').addEventListener('change', (event)=> {\n    if (event.target.value != 99) {\n        let boardIndex = event.target.value;\n        console.log(boardIndex);\n        renderBoardLists(boardIndex);\n    } else{\n        renderBoardLists();\n    }\n});\n\nfunction init() {\n    newApp = new Trello('AltCampus');\n}\n\ninit()"]}